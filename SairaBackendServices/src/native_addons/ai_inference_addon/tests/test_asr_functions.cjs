const assert = require('assert');const path = require('path');const addon = require(path.join(__dirname, '../native/build/Release/ai_inference_addon.node'));class MockWhisper {    constructor(modelPath) {        console.log(`Mock Whisper: Initializing with model from ${modelPath}`);        this.modelPath = modelPath;    }    transcribe(audioBuffer, options) {        console.log(`Mock Whisper: Transcribing audio buffer of length ${audioBuffer.length} with options:`, options);        return Promise.resolve(`Mock transcription for audio from ${this.modelPath}`);    }    free() {        console.log(`Mock Whisper: Freeing resources for model ${this.modelPath}`);        return Promise.resolve();    }}function getMockWhisper() {    return MockWhisper;}async function runTests() {    console.log('Running tests for asrTranscribe...');    addon.initWhisper(getMockWhisper);    try {        console.log('Attempting asrTranscribe without model loaded (should fail)...');        await addon.asrTranscribe(Buffer.from([0, 1, 2, 3]));        assert.fail('Test 1 failed: asrTranscribe succeeded without model loaded.');    } catch (error) {        console.log('Caught expected error:', error.message);        assert.ok(error.message.includes('Whisper model is not loaded'), 'Test 1 failed: Error message did not indicate model not loaded.');    }    await addon.loadModel('whisper', '/path/to/mock/whisper.bin');    try {        console.log('Attempting asrTranscribe with model loaded...');        const audioBuffer = Buffer.from([10, 20, 30, 40, 50]);        const transcription = await addon.asrTranscribe(audioBuffer, { language: 'en' });        console.log('Transcription:', transcription);        assert.ok(transcription.includes('Mock transcription'), 'Test 2 failed: Transcription is incorrect.');    } catch (error) {        console.error('Error during asrTranscribe:', error.message);        assert.fail('Test 2 failed: asrTranscribe failed unexpectedly.');    }    try {        console.log('Attempting to unload whisper model...');        await addon.unloadModel('whisper');        console.log('Whisper model unloaded.');    } catch (error) {        console.error('Error unloading whisper model:', error.message);        assert.fail('Test 3 failed: Could not unload whisper model.');    }    console.log('\nAll asrTranscribe tests passed!');}runTests().catch(err => {    console.error('An unexpected error occurred during tests:', err);    process.exit(1);});